var Anterec; !function (e) { var t = function () { function e(e) { this.offsetX = 5, this.offsetY = 5, this.container = e, this.rebind(), $(this.container).addClass("jsdragtable") } return e.prototype.rebind = function () { var e = this; $(this.container).find("th").each(function (t, n) { $(n).off("mousedown touchstart"), $(n).off("mouseup touchend"), $(n).on("mousedown touchstart", function (t) { e.selectColumn($(n), t) }), $(n).on("mouseup touchend", function (t) { e.dropColumn($(n), t) }) }), $(this.container).on("mouseup touchend", function () { e.cancelColumn() }) }, e.prototype.selectColumn = function (e, t) { var o = this; t.preventDefault(); var i = new n(t); this.selectedHeader = e; var a = this.selectedHeader.index() + 1, r = []; $(this.container).find("tr td:nth-child(" + a + ")").each(function (e, t) { r[r.length] = t }), this.draggableContainer = $("<div/>"), this.draggableContainer.addClass("jsdragtable-contents"), this.draggableContainer.css({ position: "absolute", left: i.event.pageX + this.offsetX, top: i.event.pageY + this.offsetY }); var s = this.createDraggableTable(e); $(r).each(function (e) { var t = $("<tr/>"), n = $("<td/>"); $(n).html($(r[e]).html()), $(t).append(n), $(s).find("tbody").append(t) }), this.draggableContainer.append(s), $("body").append(this.draggableContainer), $(this.container).on("mousemove touchmove", function (t) { o.moveColumn($(e), t) }), $(".jsdragtable-contents").on("mouseup touchend", function () { o.cancelColumn() }) }, e.prototype.moveColumn = function (e, t) { if (t.preventDefault(), null !== this.selectedHeader) { var o = new n(t); this.draggableContainer.css({ left: o.event.pageX + this.offsetX, top: o.event.pageY + this.offsetY }) } }, e.prototype.dropColumn = function (e, t) { var o = this; t.preventDefault(); var i = this.selectedHeader.index() + 1, a = $(t.target).index() + 1, r = $(this.container).find("th").length, s = new n(t); if (s.isTouchEvent && (e = $(document.elementFromPoint(s.event.clientX, s.event.clientY)), a = $(e).prevAll().length + 1), i !== a) { var c = []; $(this.container).find("tr td:nth-child(" + i + ")").each(function (e, t) { c[c.length] = t, $(t).remove(), $(o.selectedHeader).remove() }), a >= r ? (a = r - 1, this.insertCells(c, a, function (e, t) { $(e).after(t) })) : this.insertCells(c, a, function (e, t) { $(e).before(t) }), $(this.container).off("mousemove touchmove"), $(".jsdragtable-contents").remove(), this.draggableContainer = null, this.selectedHeader = null, this.rebind() } }, e.prototype.cancelColumn = function () { $(this.container).off("mousemove touchmove"), $(".jsdragtable-contents").remove(), this.draggableContainer = null, this.selectedHeader = null }, e.prototype.createDraggableTable = function (e) { var t = $("<table/>"), n = $("<thead/>"), o = $("<tbody/>"), i = $("<tr/>"), a = $("<th/>"); return $(t).addClass($(this.container).attr("class")), $(t).width($(e).width()), $(a).html($(e).html()), $(i).append(a), $(n).append(i), $(t).append(n), $(t).append(o), t }, e.prototype.insertCells = function (e, t, n) { var o = this; $(this.container).find("tr td:nth-child(" + t + ")").each(function (t, o) { n(o, $(e[t])) }), $(this.container).find("th:nth-child(" + t + ")").each(function (e, t) { n(t, $(o.selectedHeader)) }) }, e }(); e.JsDragTable = t; var n = function () { function e(e) { this.event = e, e.originalEvent && e.originalEvent.touches && e.originalEvent.changedTouches && (this.event = e.originalEvent.touches[0] || e.originalEvent.changedTouches[0], this.isTouchEvent = !0) } return e }() }(Anterec || (Anterec = {})), jQuery.fn.extend({ jsdragtable: function () { return new Anterec.JsDragTable(this) } });
